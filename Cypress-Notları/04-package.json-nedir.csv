PACKAGE.JSON DOSYASI EN ISE YARAR

-->`package.json`, JavaScript tabanli projelerde (ozellikle Node.js uygulamalarinda) kullanilan bir dosyadir ve 
projenizin yapilandirma bilgilerini, bagimliliklarini ve diger onemli verilerini icerir. 

 1.--> Nedir?:
 `package.json`, JSON formatinda yazilmis bir dosyadir ve projenizin kok dizininde bulunur. 
 Projeyi yoneten ve yapilandiran temel bilgiler icerir.
 Seleniumda ki pom.exe gibidir

 2.--> Ne Ise Yarar?
Proje Bilgileri: Projenizin adi, versiyonu, aciklamasi, yazar bilgileri gibi temel bilgileri icerir.

Bagimliliklar: Projeye dahil edilen kutuphaneler ve moduller hakkinda bilgi verir. 
Bu kutuphaneler `dependencies` ve `devDependencies` alanlarinda belirtilir.

Scripting: Proje icin ozel komutlar tanimlamaniza olanak tanir. 
ornegin, test, gelistirme sunucusu baslatma gibi islemler icin `scripts` bolumunde tanimlamalar yapabilirsiniz.

Versiyon Yonetimi: Projenizin surumunu belirleyerek, belirli bir surum uzerinde calismaniza olanak tanir.

 3.--> Neler Yapabilirim?
 
Proje Bilgilerini Tanimlamak: `name`, `version`, `description`, `author`, 
`license` gibi alanlari doldurarak projenizi tanimlayabilirsiniz.

Bagimliliklari Yonetmek:
  - Yeni bir bagimlilik eklemek icin terminalde `npm install <paket-adi>` komutunu kullanabilirsiniz. 
  Bu, `package.json` dosyanizin `dependencies` veya `devDependencies` kismina otomatik olarak eklenir.
  - ornegin:
    ```bash
    npm install express
    ```

Script Tanimlamak: `scripts` bolumunde komutlar tanimlayarak, 
belirli gorevleri kolayca calistirabilirsiniz. ornegin:
    ```json
    "scripts": {
      "start": "node app.js",
      "test": "jest"
    }
    ```
  - Bu tanimlamalarla terminalde `npm start` veya `npm test` komutlariyla ilgili script'leri calistirabilirsiniz.

Bagimliliklari Guncellemek: Mevcut bagimliliklari guncelleyebilir ve surum kontrolu yapabilirsiniz. 
ornegin, belirli bir paketi guncellemek icin:
    ```bash
    npm update <paket-adi>
    ```

 4.--> Neden Yukleriz? Amaci Nedir?
 
Projenin Yonetimini Kolaylastirmak: Projenizdeki bagimliliklari ve yapilandirmalari merkezi bir dosyada toplamak, 
yonetimi kolaylastirir.

Ekip Calismasi: Projeye katkida bulunan diger gelistiricilerin bagimliliklari kolayca yuklemelerini saglar. 
Projeyi klonladiktan sonra `npm install` komutunu calistirarak `package.json` dosyasindaki tum bagimliliklari yukleyebilirler.
 
Surum Kontrolu: Projenin surumunu ve bagimliliklarinin surumlerini kontrol ederek, 
uyumlu bir calisma ortami saglar.

 ornek `package.json` Dosyasi:
```json
{
  "name": "my-awesome-project",
  "version": "1.0.0",
  "description": "A simple project to demonstrate package.json",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "test": "jest"
  },
  "dependencies": {
    "express": "^4.17.1"
  },
  "devDependencies": {
    "jest": "^26.6.0"
  },
  "author": "Kubra Aydogdu",
  "license": "MIT"
}
```

Bu bilgiler, `package.json` dosyasinin projelerdeki rolunu ve nasil kullanilacagini anlamaniza yardimci olacaktir. 