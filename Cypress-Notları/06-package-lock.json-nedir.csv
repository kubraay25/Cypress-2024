PACKAGE-LOCK.JSON NEDİR??


"package-lock.json", Node.js projelerinde kullanilan bir dosyadir ve projeye yüklenen bağimliliklarin (modüllerin) tam sürüm bilgilerini kilitleyerek kaydeder. Bu dosya, proje bağimliliklarinin güvenilir ve tutarli bir şekilde yüklenmesini sağlar.

 1.Nedir?

"package-lock.json", "npm" (Node Package Manager) tarafindan otomatik olarak oluşturulur ve güncellenir.
- "package.json" dosyasindaki bağimliliklarin tam olarak hangi sürümde yüklendiğini  kayit altina alir.
- Bu dosya sayesinde, projeyi başkalariyla paylaşirken veya farkli bir makinede çaliştirirken 
ayni bağimliliklarin
 birebir ayni sürümlerinin yüklenmesi sağlanir.




 2.Ne İşe Yarar?

Tutarliliği Sağlar: Projeyi birden fazla geliştirici arasinda paylaştiğinizda, 
her geliştiricinin ayni bağimlilik sürümlerini kullanmasini sağlar. 
Bu, projede farkli sürümler nedeniyle oluşabilecek olasi sorunlarin önüne geçer.
Bağimlilik Zincirini Takip Eder: Projedeki bağimliliklarin sadece doğrudan yüklediğiniz sürümlerini değil, 
ayni zamanda bu bağimliliklarin kendi bağimliliklarini da (yani alt bağimliliklari) tam sürüm numaralariyla birlikte kaydeder.
Performans İyileştirmesi: "package-lock.json" dosyasi, "npm install" işlemini hizlandirabilir. Çünkü "npm", 
bağimliliklarin hangi sürümünü indireceğini bu dosyadan okur ve sürüm çözümleme işlemi için fazladan vakit harcamaz.




 3.Nasil Oluşur?

- İlk kez "npm install" komutunu çaliştirdiğinizda veya projeye yeni bir bağimlilik eklediğinizde (örneğin, "npm install express"), 
npm, bağimliliklari indirirken hem "node_modules" klasörüne dosyalari yerleştirir 
hem de bu bağimliliklarin sürüm ve çözümleme bilgilerini "package-lock.json" dosyasina kaydeder.
  


 4."package.json" ve "package-lock.json" Arasindaki Fark

"package.json": Projenin temel bağimliliklarini ve sürüm araliklarini tanimlar. 
Örneğin, ""express": "^4.17.1"" ifadesi, Express kütüphanesinin 4.17.1 sürümü veya 
daha üstteki uyumlu bir sürümünü yükleyebileceğinizi belirtir.

"package-lock.json": "package.json"'daki bağimliliklarin 
tam olarak hangi sürümde  yüklendiğini kaydeder. 
Eğer "express"in 4.17.1 sürümü yüklendiyse, "package-lock.json" bu sürümü kilitler 
ve projeyi kimin yüklediği fark etmeksizin bu sürüm yüklenir.
  


 5.Ne Zaman Güncellenir?

- Yeni bir bağimlilik eklediğinizde veya bir bağimlilik güncellendiğinde (örneğin, "npm install" ile), 
"package-lock.json" dosyasi otomatik olarak güncellenir. Bu dosyayi manuel olarak değiştirmeniz gerekmez.
  



 6.Neden Önemlidir?

Bağimliliklarin Tutarliliği: Birden fazla bilgisayarda veya geliştirici ekibinde çalişirken 
bağimliliklarin ayni sürümlerinin kurulmasini sağlar. Bu sayede farkli ortamlarda çalişan kodun tutarli bir şekilde çalişmasi güvence altina alinir.

Sürüm Kilitleme: Projenizle uyumlu olduğunu bildiğiniz bağimliliklarin tam sürüm numaralarini kilitleyerek, 
gelecekte bu sürümlerde herhangi bir değişiklik olmamasini sağlarsiniz.




 7. Örnek "package-lock.json" Dosyasi

"""json
{
  "name": "my-awesome-project",
  "version": "1.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "express": {
      "version": "4.17.1",
      "resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
      "integrity": "sha512-FOp6Z…",
      "requires": {
        "accepts": "~1.3.7",
        "array-flatten": "1.1.1"
      }
    }
  }
}
"""
Bu dosyada, bağimliliklarin kesin sürümleri ve bu bağimliliklarin hangi URL'den indirildiği gibi bilgiler bulunur.

 8.Versiyon Kontrolüne Dahil Edilmeli mi?

Evet, "package-lock.json" dosyasi versiyon kontrol sistemlerine (örneğin Git) dahil edilmelidir. 
Çünkü bu dosya, proje bağimliliklarinin tutarli bir şekilde kurulmasini sağlar. "node_modules" klasörünü paylaşmak yerine, 
"package-lock.json" dosyasini paylaşmak yeterlidir. Böylece projeyi başka biri kurarken 
"npm install" komutunu çaliştirarak tam ayni bağimliliklari kurabilir.

 Özet:
- "package-lock.json", projenizin bağimliliklarinin 
kesin sürümlerini
 ve 
alt bağimlilik zincirini
 kaydeden bir dosyadir.
- Bu dosya sayesinde, farkli ortamlarda ayni bağimliliklarin ayni sürümleri kullanilir, bu da projelerin 
tutarliliği ve güvenilirliği
 açisindan önemlidir.