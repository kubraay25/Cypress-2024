NODE_MODULES

"node_modules" klasörü, Node.js projelerinde projeye yüklenen tüm bağimliliklarin (kütüphaneler, modüller) 
fiziksel olarak depolandiği dizindir. Bir Node.js projesi geliştirirken "npm install" komutunu çaliştirdiğinizda, 
"package.json" dosyasinda belirtilen tüm bağimliliklar indirilir ve "node_modules" klasörüne yerleştirilir.

İşte "node_modules" klasörünün ne olduğunu, ne işe yaradiğini ve nasil çaliştiğini detayli bir şekilde açiklayayim:

 1. Nedir? 
 "node_modules" klasörü, projenizin kullandiği tüm üçüncü parti kütüphanelerin ve modüllerin saklandiği yerdir. 
 Projenizde doğrudan ya da dolayli olarak kullandiğiniz her bir bağimlilik buraya indirilir.
  


 2. Ne İşe Yarar?
 Bağimliliklarin Yüklenmesi: Projenizin ihtiyaç duyduğu tüm bağimliliklar ("npm install" komutuyla) bu klasöre yüklenir.
 
 Çalişma Zamani Desteği: Uygulamaniz çaliştirildiğinda ya da derlendiğinde, 
 bu bağimliliklara "node_modules" klasörü üzerinden erişilir. 
 Kodunuzun ihtiyaç duyduğu tüm modüller bu dizinde yer aldiği için uygulamaniz sorunsuz şekilde çalişir.
 
 Modül Yönetimi: Hem projede doğrudan tanimladiğiniz bağimliliklar (örneğin, "express", "lodash" gibi) 
 hem de bu bağimliliklarin kendi bağimliliklari ("dependencies" ve "devDependencies") "node_modules" klasöründe saklanir. 
 Bir modülün hangi diğer modüllere bağli olduğunu otomatik olarak yönetir.




 3. Kullanim Aşamalari

# 3.1. 
Proje Bağimliliklarinin Yüklenmesi

 "package.json" dosyasinda tanimladiğiniz bağimliliklari yüklemek için "npm install" komutunu çaliştirdiğinizda, 
 npm (Node Package Manager), belirtilen kütüphaneleri "node_modules" klasörüne indirir. Örneğin:

  """bash
  npm install express
  """
  komutunu çaliştirdiğinizda, "express" kütüphanesi ve onun bağimliliklari "node_modules" klasörüne indirilir.

# 3.2. 
Bağimliliklara Erişim

 Projenizde bir modül kullanmak istediğinizde, bu modülü "require" ya da "import" komutlariyla çağirabilirsiniz. 
 Node.js bu çağrilari yaparken, modülü önce "node_modules" klasöründe arar. Örneğin:

  """javascript
  const express = require('express');
  """
  Bu kod, "node_modules" klasöründe bulunan "express" kütüphanesini projenize dahil eder.




 4. Yapisi
 "node_modules" klasöründeki her bağimliliğin kendi klasörü vardir ve bu bağimliliğin kendine ait modülleri de 
 yine "node_modules" klasörü içinde olabilir. Bu, modüller arasi hiyerarşiyi sağlar.
  
  Örneğin, bir proje aşağidaki gibi olabilir:
  """
  myproject/
  ├── node_modules/
  │   ├── express/
  │   ├── lodash/
  ├── package.json
  └── index.js
  """

 5. Bağimliliklarin Versiyonlari
 
 "node_modules" klasörü, her bir bağimliliği yüklerken "package.json" dosyanizdaki sürüm numaralarina dikkat eder. 
 Eğer bir kütüphanenin belirli bir sürümünü kullanmak isterseniz, "package.json" dosyanizda bunu belirtebilirsiniz:
  """json
  "dependencies": {
    "express": "^4.17.1"
  }
  """
  "npm install" komutu çaliştirildiğinda, "express"'in 4.17.1 sürümü ya da bu sürüme yakin olan sürüm indirilir.

 6. Önemli Hususlar
 
# 6.1. 
"node_modules" Yedeklenir mi?

 Genellikle "node_modules" klasörü yedeklenmez veya versiyon kontrol sistemine ("git") dahil edilmez. 
 Bunun yerine, "package.json" ve "packagelock.json" dosyalari yedeklenir ve başka biri projeyi klonladiğinda 
 "npm install" komutunu çaliştirarak "node_modules"'u yeniden oluşturur.
 Bu yüzden, ".gitignore" dosyasina "node_modules" eklemek iyi bir uygulamadir:
  """
  node_modules/
  """

# 6.2. 
Disk Alani

 "node_modules" klasörü oldukça büyük olabilir. Yüzlerce, hatta binlerce küçük kütüphaneyi içerebilir. 
 Ancak, sadece projeniz çaliştiği sürece kullanilir. Eğer klasörü silerseniz, "npm install" komutunu tekrar çaliştirarak 
 bağimliliklari geri yükleyebilirsiniz.

 7. packagelock.json ve node_modules
 "packagelock.json" dosyasi, yüklenen bağimliliklarin tam sürüm bilgilerini içerir. 
 "node_modules" klasörü ise bu bağimliliklarin fiziksel dosyalarini içerir. "packagelock.json", 
 bağimliliklarin her seferinde ayni sürümde kurulmasini sağlarken, "node_modules" bağimliliklarin çalişmasi için gereken kodu saklar.

 Özet:
 
 "node_modules" klasörü
 , projenizin ihtiyaç duyduğu tüm modüllerin saklandiği yerdir.
 
 Bağimliliklarin yüklenmesi ve yönetimi
  burada yapilir, ancak genellikle bu klasör versiyon kontrolüne dahil edilmez, çünkü gerektiğinde "npm install" ile yeniden oluşturulabilir.
 Projenizin 
 geliştirme ortaminda çalişmasi
  için kritik bir rol oynar.