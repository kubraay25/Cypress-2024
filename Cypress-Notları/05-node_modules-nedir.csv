NODE_MODULES

"node_modules" klasoru, Node.js projelerinde projeye yuklenen tum bagimliliklarin (kutuphaneler, moduller) 
fiziksel olarak depolandigi dizindir. Bir Node.js projesi gelistirirken "npm install" komutunu calistirdiginizda, 
"package.json" dosyasinda belirtilen tum bagimliliklar indirilir ve "node_modules" klasorune yerlestirilir.

Iste "node_modules" klasorunun ne oldugunu, ne ise yaradigini ve nasil calistigini detayli bir sekilde aciklayayim:

 1. Nedir? 
 "node_modules" klasoru, projenizin kullandigi tum ucuncu parti kutuphanelerin ve modullerin saklandigi yerdir. 
 Projenizde dogrudan ya da dolayli olarak kullandiginiz her bir bagimlilik buraya indirilir.
  


 2. Ne Ise Yarar?
 Bagimliliklarin Yuklenmesi: Projenizin ihtiyac duydugu tum bagimliliklar ("npm install" komutuyla) bu klasore yuklenir.
 
 Calisma Zamani Destegi: Uygulamaniz calistirildiginda ya da derlendiginde, 
 bu bagimliliklara "node_modules" klasoru uzerinden erisilir. 
 Kodunuzun ihtiyac duydugu tum moduller bu dizinde yer aldigi icin uygulamaniz sorunsuz sekilde calisir.
 
 Modul Yonetimi: Hem projede dogrudan tanimladiginiz bagimliliklar (ornegin, "express", "lodash" gibi) 
 hem de bu bagimliliklarin kendi bagimliliklari ("dependencies" ve "devDependencies") "node_modules" klasorunde saklanir. 
 Bir modulun hangi diger modullere bagli oldugunu otomatik olarak yonetir.




 3. Kullanim Asamalari

# 3.1. 
Proje Bagimliliklarinin Yuklenmesi

 "package.json" dosyasinda tanimladiginiz bagimliliklari yuklemek icin "npm install" komutunu calistirdiginizda, 
 npm (Node Package Manager), belirtilen kutuphaneleri "node_modules" klasorune indirir. ornegin:

  """bash
  npm install express
  """
  komutunu calistirdiginizda, "express" kutuphanesi ve onun bagimliliklari "node_modules" klasorune indirilir.

# 3.2. 
Bagimliliklara Erisim

 Projenizde bir modul kullanmak istediginizde, bu modulu "require" ya da "import" komutlariyla cagirabilirsiniz. 
 Node.js bu cagrilari yaparken, modulu once "node_modules" klasorunde arar. ornegin:

  """javascript
  const express = require('express');
  """
  Bu kod, "node_modules" klasorunde bulunan "express" kutuphanesini projenize dahil eder.




 4. Yapisi
 "node_modules" klasorundeki her bagimliligin kendi klasoru vardir ve bu bagimliligin kendine ait modulleri de 
 yine "node_modules" klasoru icinde olabilir. Bu, moduller arasi hiyerarsiyi saglar.
  
  ornegin, bir proje asagidaki gibi olabilir:
  """
  myproject/
  ├── node_modules/
  │   ├── express/
  │   ├── lodash/
  ├── package.json
  └── index.js
  """

 5. Bagimliliklarin Versiyonlari
 
 "node_modules" klasoru, her bir bagimliligi yuklerken "package.json" dosyanizdaki surum numaralarina dikkat eder. 
 Eger bir kutuphanenin belirli bir surumunu kullanmak isterseniz, "package.json" dosyanizda bunu belirtebilirsiniz:
  """json
  "dependencies": {
    "express": "^4.17.1"
  }
  """
  "npm install" komutu calistirildiginda, "express"'in 4.17.1 surumu ya da bu surume yakin olan surum indirilir.

 6. onemli Hususlar
 
# 6.1. 
"node_modules" Yedeklenir mi?

 Genellikle "node_modules" klasoru yedeklenmez veya versiyon kontrol sistemine ("git") dahil edilmez. 
 Bunun yerine, "package.json" ve "packagelock.json" dosyalari yedeklenir ve baska biri projeyi klonladiginda 
 "npm install" komutunu calistirarak "node_modules"'u yeniden olusturur.
 Bu yuzden, ".gitignore" dosyasina "node_modules" eklemek iyi bir uygulamadir:
  """
  node_modules/
  """

# 6.2. 
Disk Alani

 "node_modules" klasoru oldukca buyuk olabilir. Yuzlerce, hatta binlerce kucuk kutuphaneyi icerebilir. 
 Ancak, sadece projeniz calistigi surece kullanilir. Eger klasoru silerseniz, "npm install" komutunu tekrar calistirarak 
 bagimliliklari geri yukleyebilirsiniz.

 7. packagelock.json ve node_modules
 "packagelock.json" dosyasi, yuklenen bagimliliklarin tam surum bilgilerini icerir. 
 "node_modules" klasoru ise bu bagimliliklarin fiziksel dosyalarini icerir. "packagelock.json", 
 bagimliliklarin her seferinde ayni surumde kurulmasini saglarken, "node_modules" bagimliliklarin calismasi icin gereken kodu saklar.

 ozet:
 
 "node_modules" klasoru
 , projenizin ihtiyac duydugu tum modullerin saklandigi yerdir.
 
 Bagimliliklarin yuklenmesi ve yonetimi
  burada yapilir, ancak genellikle bu klasor versiyon kontrolune dahil edilmez, cunku gerektiginde "npm install" ile yeniden olusturulabilir.
 Projenizin 
 gelistirme ortaminda calismasi
  icin kritik bir rol oynar.